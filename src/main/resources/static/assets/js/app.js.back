// import Vue from 'vue'
var vue = new Vue({
    el: '#app',
    vuetify: new Vuetify(),
    data() {
        return {

            currentComponent: 'view-01',
            userInfo:[],
            date: new Date().toISOString().substr(0, 10),
            menu: false,
            modal: false,
            menu2: false,
            registerButton:true,
            showMenu:true,

            login: {
                username: '',
                password: '',
            },

            user: {
                firstName: '',
                lastName: '',
                personalCode: '',
                email: '',
                password: '',
                birthDate: new Date().toISOString().substr(0, 10),


            },
            show: false,
            show2: false,
            rules: {
                required: value => !!value || 'Required.',
                min: v => v.length >= 8 || 'Min 8 characters',
                emailMatch: () => ('The email and password you entered don\'t match'),
            },
            nameRules: [
                v => !!v || 'This field is required',
            ],
            emailRules: [
                v => !!v || 'E-mail is required',
                v => /.+@.+\..+/.test(v) || 'E-mail must be valid',
            ],
            dialog: false,
            alert: false,
            errorMessage: '',


        }
    },
    components: {
        'view-01': View01,
        'view-02': View02,
    },
    computed: {},

    watch: {
        dialog(val) {
            val || this.close()
        },
    },

    created() {
        this.checkToken();

    },
    mounted() {

    },

    methods: {

        checkToken(){
            debugger;
            localStorage.clear();
            if(localStorage.getItem("token")){
                axios.get('/refresh-token', {
                    headers: {
                        Authorization: 'Bearer ' + localStorage.getItem("token")
                    },
                }).then(function (result) {
                    localStorage.setItem("token", result.data.token);
                    vue.registerButton=false;
                    this.swapComponent('view-02');

                }).catch(function (error) {
                    debugger;
                    vue.alert = true;
                    vue.errorMessage = error.response.data.message;

                });


            }else{
                this.swapComponent('view-01');
            }
        },
        swapComponent: function(component) {
            this.currentComponent = component;
        },


        close() {
            this.dialog = false;
        },

        register() {
            this.dialog = true;
        },


        save() {
            postData("/register", this.user);
            this.close();
        },


    },
});

var View02 = Vue.component('view-02', {
    template: `
        <v-card>

            <v-data-table
                    style="margin-left: 5%!important;margin-right: 5%!important;margin-top: 5%!important;"
                    :headers="headers"
                    :search="search"
                    :dark="true"
                    :items="userInfo"
                    :items-per-page="1"

                    multi-sort
                    class="elevation-1"
            >

                <template v-slot:top>
                    <v-toolbar flat color="red">
                        <v-toolbar-title>User Info</v-toolbar-title>
                        <v-divider
                                class="mx-4"
                                inset
                                vertical
                        ></v-divider>
                        <div class="flex-grow-1"></div>
                        <v-dialog v-model="dialog" max-width="500px">
                            <template v-slot:activator="{ on }">
                                <v-btn color="warn" @click="logout" dark class="mb-2" v-on="on">Logout</v-btn>
                            </template>
                        </v-dialog>
                    </v-toolbar>
                </template>
                <template v-slot:no-data>
                    <v-btn color="primary" @click="initialize">Reset</v-btn>
                </template>
            </v-data-table>
        </v-card>`,


    vuetify: new Vuetify(),
    data: function() {
        return {

            user: {
                firstName: '',
                lastName: '',
                personalCode: '',
                password: '',
                birthDate: new Date().toISOString().substr(0, 10),


            },

            rules: {
                required: value => !!value || 'Required.',
                min: v => v.length >= 8 || 'Min 8 characters',
                emailMatch: () => ('The email and password you entered don\'t match'),
            },
            nameRules: [
                v => !!v || 'This field is required',
            ],
            emailRules: [
                v => !!v || 'E-mail is required',
                v => /.+@.+\..+/.test(v) || 'E-mail must be valid',
            ],

            search: '',
            dialog: false,
            alert: false,
            errorMessage:'error!!!',
            userInfo:[
            ],
            headers: [
                {text: 'First Name', value: 'firstName'},
                {text: 'Last Name', value: 'lastName'},
                {text: 'Email', value: 'email'},
                {text: 'Personal Code', value: 'personalCode'},
                {text: 'Birth Date', value: 'birthDate'},

            ],

            editedIndex: -1,
        }
    },
    computed: {
    },

    created() {
        this.initialize()
    },
    mounted() {

    },
    watch: {
        dialog(val) {
            val || this.close()
        },
    },

    methods: {
        initialize() {
            // axios.defaults.headers.common['Authorization'] = `Bearer `+localStorage.getItem("token");
            axios.get("/get-user",{
                headers: {
                    Authorization: 'Bearer ' + localStorage.getItem("token")
                },
            }).then(
                (result) => {
                    debugger;
                    this.userInfo = result.data;
                }
            ).catch(

            )
        },



        logout() {

            localStorage.clear();
            vue.swapComponent("view-01");


        },


    },
    props: ['swapComponent']
});
var View01 = Vue.component('view-01', {

    vuetify: new Vuetify(),
    data:function() {
        return {

            date: new Date().toISOString().substr(0, 10),
            menu: false,
            modal: false,
            menu2: false,


            login: {
                username: '',
                password: '',
            },

            show: false,
            show2: false,
            rules: {
                required: value => !!value || 'Required.',
                min: v => v.length >= 8 || 'Min 8 characters',
                emailMatch: () => ('The email and password you entered don\'t match'),
            },
            nameRules: [
                v => !!v || 'This field is required',
            ],
            emailRules: [
                v => !!v || 'E-mail is required',
                v => /.+@.+\..+/.test(v) || 'E-mail must be valid',
            ],
            alert: false,
            errorMessage: '',


        }
    },
    methods: {
        authenticate() {

            axios.post("/authenticate", this.login)
                .then(
                    (result) =>{
                        debugger;
                        localStorage.setItem("token", result.data.token);

                        vue.swapComponent('view-02');
                        // vue.showMenu=false;
                        vue.registerButton=false;


                        // vue.prototype.http.defaults.headers.common['Authorization']=result.data.token;
                        // vue.router.push("/simple-auth/get-dashboard");

                        // axios.defaults.headers.common['Authorization'] = `Bearer `+localStorage.getItem("token");
                        // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
                        //
                        // axios.get('/simple-auth/get-dashboard', {
                        //     headers: {
                        //         Authorization: 'Bearer ' + localStorage.getItem("token")
                        //     },
                        // }).then(function (result) {
                        //     debugger;
                        //     // resolve(result);
                        // })

                    }
                ).catch(function (error) {
                debugger;
                vue.alert = true;
                vue.errorMessage = error.response.data.message;

            });
        },


        save() {
            postData("/register", this.user);
            this.close();
        },


    },

    props: ['swapComponent']
});


// var View02 = {
//     template: `
//         <v-card>
//
//             <v-data-table
//                     style="margin-left: 5%!important;margin-right: 5%!important;margin-top: 5%!important;"
//                     :headers="headers"
//                     :search="search"
//                     :dark="true"
//                     :items="userInfo"
//                     :items-per-page="1"
//
//                     multi-sort
//                     class="elevation-1"
//             >
//
//                 <template v-slot:top>
//                     <v-toolbar flat color="red">
//                         <v-toolbar-title>User Info</v-toolbar-title>
//                         <v-divider
//                                 class="mx-4"
//                                 inset
//                                 vertical
//                         ></v-divider>
//                         <div class="flex-grow-1"></div>
//                         <v-dialog v-model="dialog" max-width="500px">
//                             <template v-slot:activator="{ on }">
//                                 <v-btn color="warn" @click="logout" dark class="mb-2" v-on="on">Logout</v-btn>
//                             </template>
//                         </v-dialog>
//                     </v-toolbar>
//                 </template>
//                 <template v-slot:no-data>
//                     <v-btn color="primary" @click="initialize">Reset</v-btn>
//                 </template>
//             </v-data-table>
//         </v-card>`,
//
//
//     vuetify: new Vuetify(),
//     data: function() {
//         return {
//
//             dialog:false,
//             user: {
//                 firstName: '',
//                 lastName: '',
//                 personalCode: '',
//                 password: '',
//                 birthDate: new Date().toISOString().substr(0, 10),
//
//
//             },
//
//             rules: {
//                 required: value => !!value || 'Required.',
//                 min: v => v.length >= 8 || 'Min 8 characters',
//                 emailMatch: () => ('The email and password you entered don\'t match'),
//             },
//             nameRules: [
//                 v => !!v || 'This field is required',
//             ],
//             emailRules: [
//                 v => !!v || 'E-mail is required',
//                 v => /.+@.+\..+/.test(v) || 'E-mail must be valid',
//             ],
//
//             search: '',
//             dialog: false,
//             alert: false,
//             errorMessage:'error!!!',
//             userInfo:[
//             ],
//             headers: [
//                 {text: 'First Name', value: 'firstName'},
//                 {text: 'Last Name', value: 'lastName'},
//                 {text: 'Email', value: 'email'},
//                 {text: 'Personal Code', value: 'personalCode'},
//                 {text: 'Birth Date', value: 'birthDate'},
//
//             ],
//
//             editedIndex: -1,
//         }
//     },
//     computed: {
//     },
//
//     created() {
//         this.initialize()
//     },
//     mounted() {
//
//     },
//     watch: {
//         dialog(val) {
//             val || this.close()
//         },
//     },
//
//     methods: {
//         initialize() {
//             // axios.defaults.headers.common['Authorization'] = `Bearer `+localStorage.getItem("token");
//             axios.get("/get-user",{
//                 headers: {
//                     Authorization: 'Bearer ' + localStorage.getItem("token")
//                 },
//             }).then(
//                 (result) => {
//                     debugger;
//                     this.userInfo = result.data;
//                 }
//             ).catch(
//
//             )
//         },
//
//
//
//         logout() {
//
//             localStorage.clear();
//             vue.swapComponent("view-01");
//
//
//         },
//
//
//     },
//     props: ['swapComponent']
// }

// var View01 = {
//     template:'<v-form>\n' +
//         '            <v-container>\n' +
//         '                <v-row>\n' +
//         '\n' +
//         '                    <v-col cols="12" md="12" sm="12">\n' +
//         '                        <v-text-field\n' +
//         '                                v-model="login.username"\n' +
//         '                                :rules="[rules.required]"\n' +
//         '                                label="Email or Personal Code"\n' +
//         '                                outlined\n' +
//         '                        ></v-text-field>\n' +
//         '                    </v-col>\n' +
//         '                </v-row>\n' +
//         '                <v-row>\n' +
//         '\n' +
//         '                    <v-col cols="12" md="12" sm="12">\n' +
//         '\n' +
//         '                        <v-text-field\n' +
//         '                                :append-icon="show2 ? \'visibility\' : \'visibility_off\'"\n' +
//         '                                v-model="login.password"\n' +
//         '                                :rules="[rules.required]"\n' +
//         '                                :type="show2 ? \'text\' : \'password\'"\n' +
//         '                                label="Password"\n' +
//         '                                hint="At least 8 characters"\n' +
//         '                                class="input-group--focused"\n' +
//         '                                @click:append="show2 = !show2"\n' +
//         '                                outlined\n' +
//         '                        ></v-text-field>\n' +
//         '                    </v-col>\n' +
//         '\n' +
//         '                </v-row>\n' +
//         '\n' +
//         '                <v-row>\n' +
//         '                    <v-col>\n' +
//         '                        <div class="text-center">\n' +
//         '                            <v-btn\n' +
//         '                                    class="success"\n' +
//         '                                    dark\n' +
//         '                                    @click="authenticate()"\n' +
//         '                            >\n' +
//         '                                Login\n' +
//         '                            </v-btn>\n' +
//         '                        </div>\n' +
//         '                    </v-col>\n' +
//
//
//         '\n' +
//         '                </v-row>\n' +
//         '            </v-container>\n' +
//         '        </v-form>',
//     vuetify: new Vuetify(),
//     data:function() {
//         return {
//
//             date: new Date().toISOString().substr(0, 10),
//             menu: false,
//             modal: false,
//             menu2: false,
//
//
//             login: {
//                 username: '',
//                 password: '',
//             },
//
//             show: false,
//             show2: false,
//             rules: {
//                 required: value => !!value || 'Required.',
//                 min: v => v.length >= 8 || 'Min 8 characters',
//                 emailMatch: () => ('The email and password you entered don\'t match'),
//             },
//             nameRules: [
//                 v => !!v || 'This field is required',
//             ],
//             emailRules: [
//                 v => !!v || 'E-mail is required',
//                 v => /.+@.+\..+/.test(v) || 'E-mail must be valid',
//             ],
//             alert: false,
//             errorMessage: '',
//
//
//         }
//     },
//     methods: {
//         swapComponent: function(component) {
//             vue.currentComponent = component;
//         },
//
//         authenticate() {
//
//             axios.post("/authenticate", this.login)
//                 .then(
//                     (result) =>{
//                         debugger;
//                         localStorage.setItem("token", result.data.token);
//
//                         vue.swapComponent('view-02');
//                         // vue.showMenu=false;
//                         vue.registerButton=false;
//
//
//                         // vue.prototype.http.defaults.headers.common['Authorization']=result.data.token;
//                         // vue.router.push("/simple-auth/get-dashboard");
//
//                         // axios.defaults.headers.common['Authorization'] = `Bearer `+localStorage.getItem("token");
//                         // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
//                         //
//                         // axios.get('/simple-auth/get-dashboard', {
//                         //     headers: {
//                         //         Authorization: 'Bearer ' + localStorage.getItem("token")
//                         //     },
//                         // }).then(function (result) {
//                         //     debugger;
//                         //     // resolve(result);
//                         // })
//
//                     }
//                 ).catch(function (error) {
//                 debugger;
//                 vue.alert = true;
//                 vue.errorMessage = error.response.data.message;
//
//             });
//         },
//
//
//         save() {
//             postData("/register", this.user);
//             this.close();
//         },
//
//
//     },
//
//     props: ['swapComponent']
// }





function timeConverter(UNIX_timestamp) {
    let a = new Date(UNIX_timestamp);
    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    let year = a.getFullYear();
    let month = months[a.getMonth()];
    let date = a.getDate();
    let hour = a.getHours();
    let min = a.getMinutes();
    let sec = a.getSeconds();
    let time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;
    return time;
}

function postData(url, data) {

    axios.post(url, data)
        .then(
            function (result) {

            }
        ).catch(function (error) {
        vue.alert = true;
        vue.errorMessage = error.response.data.message;

    });

}